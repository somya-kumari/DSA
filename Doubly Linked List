#include <iostream>

using  namespace std;
class Node {
    public:
    int data;
    Node* prev;
    Node* next;
    //constructor
    Node(int d){
    this-> data= d;
    this-> prev = NULL;
    this-> next = NULL;
    }
};
//traversing a linked list
    void print(Node* head){
        Node* temp = head;
        while(temp != NULL){
            cout << temp -> data << " ";
            temp = temp -> next;
        }
        cout << endl;
    }
    //gives length of linked list
    int getlength(Node* head){
        int len = 0;
        Node* temp = head;
        while(temp != NULL){
            len++;
            temp = temp ->next;
        }
        return len;
    }
    void insertathead(Node* &tail, Node* &head, int d){
        //empty list
        if(head == NULL){
           Node* temp = new Node(d);
           head = temp;
           tail = temp;
        }
        else {
        Node* temp = new Node(d);
        temp -> next = head;
        head -> prev = temp;
        head = temp;
        }
    }
     void insertattail(Node* &tail,Node* &head,int d){
         if(tail == NULL){
           Node* temp = new Node(d);
           tail = temp;
           head = temp;
        }
        else{
         Node* temp = new Node(d);
         tail -> next = temp;
         temp -> prev = tail;
         tail = temp;
        }
     }
     
    void insertatposition(Node* &head,Node* &tail,int position,int d){
       //insert at start
       if(position == 1){
           insertathead(tail,head, d);
           return;
       }
       Node* temp = head;
       int cnt =1;
       while(cnt<position-1){
           temp = temp-> next;
           cnt++;
       }
      // insert at last position
      if(temp -> next == NULL){
          insertattail(tail,head,d);
          return;
      }
      //creating a node for d
       Node* nodetoinsert = new Node(d);
       nodetoinsert -> next = temp -> next;
       temp -> next -> prev = nodetoinsert;
       temp -> next = nodetoinsert;
       nodetoinsert -> prev = temp;
    }
    
int main() 
{
     Node* node1 = new Node(10);
     Node* head = node1;
     Node* tail = node1;
     print(head);
     cout << getlength(head) << endl;
     insertathead(tail,head,11);
     print(head); 
     cout << "head " << head -> data << endl;
     cout << "tail " << tail -> data << endl;
     insertathead(tail,head,13);
     print(head); 
     cout << "head " << head -> data << endl;
     cout << "tail " << tail -> data << endl;
     insertathead(tail,head,8);
     print(head); 
     cout << "head " << head -> data << endl;
     cout << "tail " << tail -> data << endl;
     insertattail(tail,head,25);
     print(head);
     cout << "head " << head -> data << endl;
     cout << "tail " << tail -> data << endl;
     insertatposition(head,tail,2,100);
     print(head);
     cout << "head " << head -> data << endl;
     cout << "tail " << tail -> data << endl;
     insertatposition(head,tail,1,101);
     print(head);
     cout << "head " << head -> data << endl;
     cout << "tail " << tail -> data << endl;
     insertatposition(head,tail,8,102);
     print(head);
     cout << "head " << head -> data << endl;
     cout << "tail " << tail -> data << endl;
     
    return 0;
}
 
