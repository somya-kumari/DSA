#include <bits/stdc++.h> 
int partition(vector<int> & arr,int s,int e)
{
    int pivot = arr[s];
    int cnt = 0;
    for(int i =s+1;i<=e;i++){
        if(arr[i]<=pivot){
            cnt++;
        }
    }
    
   int pivotindex = s+cnt;
   swap(arr[pivotindex],arr[s]);
   int i =s, j = e;
   while(i<pivotindex && j>pivotindex){
       while(arr[i]<pivot){
           i++;
       }
       while(arr[j]>pivot){
           j--;
       }
      if(i<pivotindex && j>pivotindex){
        swap(arr[i++],arr[j--]);     
       }
   }
}

void solve(vector<int> &arr,int s,int e){
    if(s>=e){
        return;
    }  
    int p = partition(arr,s,e);
    solve(arr,s,p-1);
    solve(arr,p+1,e);
}
vector<int> quickSort(vector<int> arr)
{
    solve(arr,0,arr.size()-1);
    return arr; 
}
